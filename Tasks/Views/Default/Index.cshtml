@{
    ViewBag.Title = "Index";
}

<p>
    <form data-bind="submit: create" class="form-inline">
        <input type="text" class="span4" id="Title" name="Title" data-bind="value:Title,valueUpdate: 'afterkeydown'" />
        <input type="submit" value="New Task" class="btn btn-primary" data-bind="enable: Title().length > 0" />
    </form>
</p>

<table class="table">
    <thead>
        <tr>
            <th class="span10">Title</th>
            <th class="span2">Complete</th>
            <th></th>
        </tr>
    </thead>
    <tbody data-bind="foreach: tasks">
        <tr data-bind="css: { 'task-is-done': Complete == true }">
            <td data-bind="text: Title"></td>
            <td data-bind="text: Complete"></td>
            <td>
                <button class="btn" data-bind="click: $root.edit"> edit </button>
                <button class="btn btn-danger" data-bind="click: $root.remove">delete </button>
                <button class="btn btn-success" data-bind="click: $root.done"> done </button>
            </td>
        </tr>
    </tbody>
</table>



<div id="modaledit" class="modal hide fade"  data-bind="with: task">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h3>Modal header</h3>
  </div>
  <div class="modal-body">
    <p>
        <form id="formedit">
            <label>Title</label>
            <input type="text" data-bind="value: Title" />
        </form>
    </p>
  </div>
  <div class="modal-footer">
    <a href="#" class="btn">Close</a>
    <a href="#" class="btn btn-primary" data-bind="click: $root.update">Save changes</a>
  </div>
</div>

@section scripts{
    <script>

        var TaskViewModel = function () {

            var self = this;
            self.TaskId = ko.observable(0);
            self.Title = ko.observable("");
            self.Complete = ko.observable(false);

            var task = {
                TaskId: self.TaskId,
                Title: self.Title,
                Complete: self.Complete
            }          
            
            self.task = ko.observable();
            self.tasks = ko.observableArray();            

            self.getAll = function () {
                $.getJSON("api/task", function (data) {
                    self.tasks(data);
                })
            }            

            self.create = function () {
                $.post("api/task", task, function (data) {                    
                    self.tasks.unshift(ko.toJS(data));
                    self.Title("");
                })
            }

            self.remove = function (item) {
                $.ajax({
                    url: 'api/task/' + item.TaskId,
                    type: 'delete',
                    contentType: 'application/json; charset=utf-8',
                    complete: function () {
                        self.tasks.remove(item);
                        toastr.success('Record Remove With Success!', 'Success');
                    }
                });
            }

            self.edit = function (item) {                
                self.task(item);
                $('#modaledit').modal('show');               
            }

            self.update = function (item) {
                $.ajax({
                    url: 'api/task/' + item.TaskId,
                    type: 'put',
                    data: ko.toJSON(item),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        self.tasks.replace(item, ko.toJS(data));
                    },
                    complete: function () {
                        $('#modaledit').modal('hide');
                        toastr.success('Record Save With Success!', 'Success');
                    }
                });
            }

            self.done = function (item) {
                item.Complete = true;
                $.ajax({
                    url: 'api/task/' + item.TaskId,
                    type: 'put',
                    data: ko.toJSON(item),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        self.tasks.replace(item, ko.toJS(data));
                    }
                });
            }

            self.getAll();

        };

        ko.applyBindings(new TaskViewModel());

        $(document).ready(function () {
            
        });

    </script>
}
